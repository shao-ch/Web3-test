{
	"id": "f9b1ee005d9fbff8a7b6dcd497c149af",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/test_work/ETHWallet.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\ncontract ETHWallet {\n    \n\n    function fund() external payable {\n        \n    }\n\n    function withdraw() external  {\n        address _sender=msg.sender;\n        payable(_sender).transfer(address(this).balance);\n    }\n\n    function withdrawV2() external  {\n        address _sender=msg.sender;\n       bool success= payable(_sender).send(address(this).balance);\n       if (!success){\n            revert();\n       }\n    }\n\n    function withdrawV3() external  {\n        address _sender=msg.sender;\n       (bool success,)= payable(_sender).call{value:address(this).balance}(\"\");\n       if (!success){\n            revert();\n       }\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/test_work/ETHWallet.sol": {
				"ETHWallet": {
					"abi": [
						{
							"inputs": [],
							"name": "fund",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawV2",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawV3",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/test_work/ETHWallet.sol\":58:692  contract ETHWallet {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/test_work/ETHWallet.sol\":58:692  contract ETHWallet {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3ccfd60b\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x95dbfc62\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xb60d4288\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xfd4e822e\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/test_work/ETHWallet.sol\":144:275  function withdraw() external  {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_6:\n      pop\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"contracts/test_work/ETHWallet.sol\":482:690  function withdrawV3() external  {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_9:\n      pop\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      stop\n        /* \"contracts/test_work/ETHWallet.sol\":89:138  function fund() external payable {... */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"contracts/test_work/ETHWallet.sol\":281:476  function withdrawV2() external  {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      stop\n        /* \"contracts/test_work/ETHWallet.sol\":144:275  function withdraw() external  {... */\n    tag_8:\n        /* \"contracts/test_work/ETHWallet.sol\":184:199  address _sender */\n      0x00\n        /* \"contracts/test_work/ETHWallet.sol\":200:210  msg.sender */\n      caller\n        /* \"contracts/test_work/ETHWallet.sol\":184:210  address _sender=msg.sender */\n      swap1\n      pop\n        /* \"contracts/test_work/ETHWallet.sol\":228:235  _sender */\n      dup1\n        /* \"contracts/test_work/ETHWallet.sol\":220:245  payable(_sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test_work/ETHWallet.sol\":220:268  payable(_sender).transfer(address(this).balance) */\n      0x08fc\n        /* \"contracts/test_work/ETHWallet.sol\":246:267  address(this).balance */\n      selfbalance\n        /* \"contracts/test_work/ETHWallet.sol\":220:268  payable(_sender).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_19\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_19:\n      pop\n        /* \"contracts/test_work/ETHWallet.sol\":174:275  {... */\n      pop\n        /* \"contracts/test_work/ETHWallet.sol\":144:275  function withdraw() external  {... */\n      jump\t// out\n        /* \"contracts/test_work/ETHWallet.sol\":482:690  function withdrawV3() external  {... */\n    tag_11:\n        /* \"contracts/test_work/ETHWallet.sol\":524:539  address _sender */\n      0x00\n        /* \"contracts/test_work/ETHWallet.sol\":540:550  msg.sender */\n      caller\n        /* \"contracts/test_work/ETHWallet.sol\":524:550  address _sender=msg.sender */\n      swap1\n      pop\n        /* \"contracts/test_work/ETHWallet.sol\":560:572  bool success */\n      0x00\n        /* \"contracts/test_work/ETHWallet.sol\":584:591  _sender */\n      dup2\n        /* \"contracts/test_work/ETHWallet.sol\":576:597  payable(_sender).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test_work/ETHWallet.sol\":604:625  address(this).balance */\n      selfbalance\n        /* \"contracts/test_work/ETHWallet.sol\":576:630  payable(_sender).call{value:address(this).balance}(\"\") */\n      mload(0x40)\n      tag_21\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_25\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_24)\n    tag_25:\n      0x60\n      swap2\n      pop\n    tag_24:\n      pop\n        /* \"contracts/test_work/ETHWallet.sol\":559:630  (bool success,)= payable(_sender).call{value:address(this).balance}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/test_work/ETHWallet.sol\":644:651  success */\n      dup1\n        /* \"contracts/test_work/ETHWallet.sol\":639:684  if (!success){... */\n      tag_26\n      jumpi\n        /* \"contracts/test_work/ETHWallet.sol\":666:674  revert() */\n      0x00\n      dup1\n      revert\n        /* \"contracts/test_work/ETHWallet.sol\":639:684  if (!success){... */\n    tag_26:\n        /* \"contracts/test_work/ETHWallet.sol\":514:690  {... */\n      pop\n      pop\n        /* \"contracts/test_work/ETHWallet.sol\":482:690  function withdrawV3() external  {... */\n      jump\t// out\n        /* \"contracts/test_work/ETHWallet.sol\":89:138  function fund() external payable {... */\n    tag_13:\n      jump\t// out\n        /* \"contracts/test_work/ETHWallet.sol\":281:476  function withdrawV2() external  {... */\n    tag_16:\n        /* \"contracts/test_work/ETHWallet.sol\":323:338  address _sender */\n      0x00\n        /* \"contracts/test_work/ETHWallet.sol\":339:349  msg.sender */\n      caller\n        /* \"contracts/test_work/ETHWallet.sol\":323:349  address _sender=msg.sender */\n      swap1\n      pop\n        /* \"contracts/test_work/ETHWallet.sol\":358:370  bool success */\n      0x00\n        /* \"contracts/test_work/ETHWallet.sol\":380:387  _sender */\n      dup2\n        /* \"contracts/test_work/ETHWallet.sol\":372:393  payable(_sender).send */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test_work/ETHWallet.sol\":372:416  payable(_sender).send(address(this).balance) */\n      0x08fc\n        /* \"contracts/test_work/ETHWallet.sol\":394:415  address(this).balance */\n      selfbalance\n        /* \"contracts/test_work/ETHWallet.sol\":372:416  payable(_sender).send(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/test_work/ETHWallet.sol\":358:416  bool success= payable(_sender).send(address(this).balance) */\n      swap1\n      pop\n        /* \"contracts/test_work/ETHWallet.sol\":430:437  success */\n      dup1\n        /* \"contracts/test_work/ETHWallet.sol\":425:470  if (!success){... */\n      tag_30\n      jumpi\n        /* \"contracts/test_work/ETHWallet.sol\":452:460  revert() */\n      0x00\n      dup1\n      revert\n        /* \"contracts/test_work/ETHWallet.sol\":425:470  if (!success){... */\n    tag_30:\n        /* \"contracts/test_work/ETHWallet.sol\":313:476  {... */\n      pop\n      pop\n        /* \"contracts/test_work/ETHWallet.sol\":281:476  function withdrawV2() external  {... */\n      jump\t// out\n        /* \"#utility.yul\":7:154   */\n    tag_31:\n        /* \"#utility.yul\":108:119   */\n      0x00\n        /* \"#utility.yul\":145:148   */\n      dup2\n        /* \"#utility.yul\":130:148   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:154   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":160:274   */\n    tag_32:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":280:678   */\n    tag_33:\n        /* \"#utility.yul\":439:442   */\n      0x00\n        /* \"#utility.yul\":460:543   */\n      tag_38\n        /* \"#utility.yul\":541:542   */\n      0x00\n        /* \"#utility.yul\":536:539   */\n      dup4\n        /* \"#utility.yul\":460:543   */\n      tag_31\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":453:543   */\n      swap2\n      pop\n        /* \"#utility.yul\":552:645   */\n      tag_39\n        /* \"#utility.yul\":641:644   */\n      dup3\n        /* \"#utility.yul\":552:645   */\n      tag_32\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":670:671   */\n      0x00\n        /* \"#utility.yul\":665:668   */\n      dup3\n        /* \"#utility.yul\":661:672   */\n      add\n        /* \"#utility.yul\":654:672   */\n      swap1\n      pop\n        /* \"#utility.yul\":280:678   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":684:1063   */\n    tag_22:\n        /* \"#utility.yul\":868:871   */\n      0x00\n        /* \"#utility.yul\":890:1037   */\n      tag_41\n        /* \"#utility.yul\":1033:1036   */\n      dup3\n        /* \"#utility.yul\":890:1037   */\n      tag_33\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":883:1037   */\n      swap2\n      pop\n        /* \"#utility.yul\":1054:1057   */\n      dup2\n        /* \"#utility.yul\":1047:1057   */\n      swap1\n      pop\n        /* \"#utility.yul\":684:1063   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205014f7634f4f1aab77d472899698183e257d2b9a0e7bf5f03c791979253c79a264736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506102138061001d5f395ff3fe60806040526004361061003e575f3560e01c80633ccfd60b1461004257806395dbfc6214610058578063b60d42881461006e578063fd4e822e14610078575b5f80fd5b34801561004d575f80fd5b5061005661008e565b005b348015610063575f80fd5b5061006c6100d9565b005b610076610152565b005b348015610083575f80fd5b5061008c610154565b005b5f3390508073ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f193505050501580156100d5573d5f803e3d5ffd5b5050565b5f3390505f8173ffffffffffffffffffffffffffffffffffffffff1647604051610102906101c9565b5f6040518083038185875af1925050503d805f811461013c576040519150601f19603f3d011682016040523d82523d5f602084013e610141565b606091505b505090508061014e575f80fd5b5050565b565b5f3390505f8173ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f19350505050905080610198575f80fd5b5050565b5f81905092915050565b50565b5f6101b45f8361019c565b91506101bf826101a6565b5f82019050919050565b5f6101d3826101a9565b915081905091905056fea26469706673582212205014f7634f4f1aab77d472899698183e257d2b9a0e7bf5f03c791979253c79a264736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x42 JUMPI DUP1 PUSH4 0x95DBFC62 EQ PUSH2 0x58 JUMPI DUP1 PUSH4 0xB60D4288 EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xFD4E822E EQ PUSH2 0x78 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x56 PUSH2 0x8E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C PUSH2 0xD9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x76 PUSH2 0x152 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x83 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x8C PUSH2 0x154 JUMP JUMPDEST STOP JUMPDEST PUSH0 CALLER SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xD5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0x102 SWAP1 PUSH2 0x1C9 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x13C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x141 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x14E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP JUMP JUMPDEST JUMP JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP SWAP1 POP DUP1 PUSH2 0x198 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1B4 PUSH0 DUP4 PUSH2 0x19C JUMP JUMPDEST SWAP2 POP PUSH2 0x1BF DUP3 PUSH2 0x1A6 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D3 DUP3 PUSH2 0x1A9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP EQ 0xF7 PUSH4 0x4F4F1AAB PUSH24 0xD472899698183E257D2B9A0E7BF5F03C791979253C79A264 PUSH20 0x6F6C634300081800330000000000000000000000 ",
							"sourceMap": "58:634:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@fund_5": {
									"entryPoint": 338,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawV2_56": {
									"entryPoint": 340,
									"id": 56,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawV3_88": {
									"entryPoint": 217,
									"id": 88,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_26": {
									"entryPoint": 142,
									"id": 26,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 425,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 457,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 412,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1066:1",
										"nodeType": "YulBlock",
										"src": "0:1066:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "120:34:1",
													"nodeType": "YulBlock",
													"src": "120:34:1",
													"statements": [
														{
															"nativeSrc": "130:18:1",
															"nodeType": "YulAssignment",
															"src": "130:18:1",
															"value": {
																"name": "pos",
																"nativeSrc": "145:3:1",
																"nodeType": "YulIdentifier",
																"src": "145:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "130:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "130:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "7:147:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "92:3:1",
														"nodeType": "YulTypedName",
														"src": "92:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "97:6:1",
														"nodeType": "YulTypedName",
														"src": "97:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "108:11:1",
														"nodeType": "YulTypedName",
														"src": "108:11:1",
														"type": ""
													}
												],
												"src": "7:147:1"
											},
											{
												"body": {
													"nativeSrc": "266:8:1",
													"nodeType": "YulBlock",
													"src": "266:8:1",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "160:114:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "258:6:1",
														"nodeType": "YulTypedName",
														"src": "258:6:1",
														"type": ""
													}
												],
												"src": "160:114:1"
											},
											{
												"body": {
													"nativeSrc": "443:235:1",
													"nodeType": "YulBlock",
													"src": "443:235:1",
													"statements": [
														{
															"nativeSrc": "453:90:1",
															"nodeType": "YulAssignment",
															"src": "453:90:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "536:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "536:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "541:1:1",
																		"nodeType": "YulLiteral",
																		"src": "541:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "460:75:1",
																	"nodeType": "YulIdentifier",
																	"src": "460:75:1"
																},
																"nativeSrc": "460:83:1",
																"nodeType": "YulFunctionCall",
																"src": "460:83:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "453:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "453:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "641:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "641:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "552:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "552:88:1"
																},
																"nativeSrc": "552:93:1",
																"nodeType": "YulFunctionCall",
																"src": "552:93:1"
															},
															"nativeSrc": "552:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "552:93:1"
														},
														{
															"nativeSrc": "654:18:1",
															"nodeType": "YulAssignment",
															"src": "654:18:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "665:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "665:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "670:1:1",
																		"nodeType": "YulLiteral",
																		"src": "670:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "661:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "661:3:1"
																},
																"nativeSrc": "661:11:1",
																"nodeType": "YulFunctionCall",
																"src": "661:11:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "654:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "654:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "280:398:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "431:3:1",
														"nodeType": "YulTypedName",
														"src": "431:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "439:3:1",
														"nodeType": "YulTypedName",
														"src": "439:3:1",
														"type": ""
													}
												],
												"src": "280:398:1"
											},
											{
												"body": {
													"nativeSrc": "872:191:1",
													"nodeType": "YulBlock",
													"src": "872:191:1",
													"statements": [
														{
															"nativeSrc": "883:154:1",
															"nodeType": "YulAssignment",
															"src": "883:154:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1033:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1033:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "890:141:1",
																	"nodeType": "YulIdentifier",
																	"src": "890:141:1"
																},
																"nativeSrc": "890:147:1",
																"nodeType": "YulFunctionCall",
																"src": "890:147:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "883:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "883:3:1"
																}
															]
														},
														{
															"nativeSrc": "1047:10:1",
															"nodeType": "YulAssignment",
															"src": "1047:10:1",
															"value": {
																"name": "pos",
																"nativeSrc": "1054:3:1",
																"nodeType": "YulIdentifier",
																"src": "1054:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1047:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1047:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "684:379:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "859:3:1",
														"nodeType": "YulTypedName",
														"src": "859:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "868:3:1",
														"nodeType": "YulTypedName",
														"src": "868:3:1",
														"type": ""
													}
												],
												"src": "684:379:1"
											}
										]
									},
									"contents": "{\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061003e575f3560e01c80633ccfd60b1461004257806395dbfc6214610058578063b60d42881461006e578063fd4e822e14610078575b5f80fd5b34801561004d575f80fd5b5061005661008e565b005b348015610063575f80fd5b5061006c6100d9565b005b610076610152565b005b348015610083575f80fd5b5061008c610154565b005b5f3390508073ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f193505050501580156100d5573d5f803e3d5ffd5b5050565b5f3390505f8173ffffffffffffffffffffffffffffffffffffffff1647604051610102906101c9565b5f6040518083038185875af1925050503d805f811461013c576040519150601f19603f3d011682016040523d82523d5f602084013e610141565b606091505b505090508061014e575f80fd5b5050565b565b5f3390505f8173ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f19350505050905080610198575f80fd5b5050565b5f81905092915050565b50565b5f6101b45f8361019c565b91506101bf826101a6565b5f82019050919050565b5f6101d3826101a9565b915081905091905056fea26469706673582212205014f7634f4f1aab77d472899698183e257d2b9a0e7bf5f03c791979253c79a264736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x42 JUMPI DUP1 PUSH4 0x95DBFC62 EQ PUSH2 0x58 JUMPI DUP1 PUSH4 0xB60D4288 EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xFD4E822E EQ PUSH2 0x78 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x56 PUSH2 0x8E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C PUSH2 0xD9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x76 PUSH2 0x152 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x83 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x8C PUSH2 0x154 JUMP JUMPDEST STOP JUMPDEST PUSH0 CALLER SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xD5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0x102 SWAP1 PUSH2 0x1C9 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x13C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x141 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x14E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP JUMP JUMPDEST JUMP JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP SWAP1 POP DUP1 PUSH2 0x198 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1B4 PUSH0 DUP4 PUSH2 0x19C JUMP JUMPDEST SWAP2 POP PUSH2 0x1BF DUP3 PUSH2 0x1A6 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D3 DUP3 PUSH2 0x1A9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP EQ 0xF7 PUSH4 0x4F4F1AAB PUSH24 0xD472899698183E257D2B9A0E7BF5F03C791979253C79A264 PUSH20 0x6F6C634300081800330000000000000000000000 ",
							"sourceMap": "58:634:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;144:131;;;;;;;;;;;;;:::i;:::-;;482:208;;;;;;;;;;;;;:::i;:::-;;89:49;;;:::i;:::-;;281:195;;;;;;;;;;;;;:::i;:::-;;144:131;184:15;200:10;184:26;;228:7;220:25;;:48;246:21;220:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;174:101;144:131::o;482:208::-;524:15;540:10;524:26;;560:12;584:7;576:21;;604;576:54;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;559:71;;;644:7;639:45;;666:8;;;639:45;514:176;;482:208::o;89:49::-;:::o;281:195::-;323:15;339:10;323:26;;358:12;380:7;372:21;;:44;394:21;372:44;;;;;;;;;;;;;;;;;;;;;;;358:58;;430:7;425:45;;452:8;;;425:45;313:163;;281:195::o;7:147:1:-;108:11;145:3;130:18;;7:147;;;;:::o;160:114::-;;:::o;280:398::-;439:3;460:83;541:1;536:3;460:83;:::i;:::-;453:90;;552:93;641:3;552:93;:::i;:::-;670:1;665:3;661:11;654:18;;280:398;;;:::o;684:379::-;868:3;890:147;1033:3;890:147;:::i;:::-;883:154;;1054:3;1047:10;;684:379;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "106200",
								"executionCost": "151",
								"totalCost": "106351"
							},
							"external": {
								"fund()": "141",
								"withdraw()": "infinite",
								"withdrawV2()": "infinite",
								"withdrawV3()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 692,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 58,
									"end": 692,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 58,
									"end": 692,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 692,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 692,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 692,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 58,
									"end": 692,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 692,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 58,
									"end": 692,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 692,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 692,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 58,
									"end": 692,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 692,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 58,
									"end": 692,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 58,
									"end": 692,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 692,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 692,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 692,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 692,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 58,
									"end": 692,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 692,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205014f7634f4f1aab77d472899698183e257d2b9a0e7bf5f03c791979253c79a264736f6c63430008180033",
									".code": [
										{
											"begin": 58,
											"end": 692,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 692,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 692,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 692,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 692,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 692,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 692,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 692,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 692,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 58,
											"end": 692,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 58,
											"end": 692,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 58,
											"end": 692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 692,
											"name": "PUSH",
											"source": 0,
											"value": "3CCFD60B"
										},
										{
											"begin": 58,
											"end": 692,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 692,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 692,
											"name": "PUSH",
											"source": 0,
											"value": "95DBFC62"
										},
										{
											"begin": 58,
											"end": 692,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 58,
											"end": 692,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 692,
											"name": "PUSH",
											"source": 0,
											"value": "B60D4288"
										},
										{
											"begin": 58,
											"end": 692,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 692,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 692,
											"name": "PUSH",
											"source": 0,
											"value": "FD4E822E"
										},
										{
											"begin": 58,
											"end": 692,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 58,
											"end": 692,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 692,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 692,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 692,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 144,
											"end": 275,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 144,
											"end": 275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 144,
											"end": 275,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 144,
											"end": 275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 144,
											"end": 275,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 144,
											"end": 275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 144,
											"end": 275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 144,
											"end": 275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 144,
											"end": 275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 144,
											"end": 275,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 144,
											"end": 275,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 144,
											"end": 275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 144,
											"end": 275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 144,
											"end": 275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 144,
											"end": 275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 144,
											"end": 275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 144,
											"end": 275,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 144,
											"end": 275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 144,
											"end": 275,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 482,
											"end": 690,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 482,
											"end": 690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 482,
											"end": 690,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 482,
											"end": 690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 482,
											"end": 690,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 482,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 482,
											"end": 690,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 482,
											"end": 690,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 482,
											"end": 690,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 482,
											"end": 690,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 482,
											"end": 690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 482,
											"end": 690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 482,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 482,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 482,
											"end": 690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 482,
											"end": 690,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 482,
											"end": 690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 482,
											"end": 690,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 89,
											"end": 138,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 89,
											"end": 138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 89,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 89,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 89,
											"end": 138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 89,
											"end": 138,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 89,
											"end": 138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 89,
											"end": 138,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 281,
											"end": 476,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 281,
											"end": 476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 281,
											"end": 476,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 281,
											"end": 476,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 476,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 281,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 281,
											"end": 476,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 281,
											"end": 476,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 476,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 476,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 281,
											"end": 476,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 281,
											"end": 476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 281,
											"end": 476,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 281,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 281,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 281,
											"end": 476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 281,
											"end": 476,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 281,
											"end": 476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 281,
											"end": 476,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 144,
											"end": 275,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 144,
											"end": 275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 199,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 200,
											"end": 210,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 184,
											"end": 210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 228,
											"end": 235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 220,
											"end": 245,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 220,
											"end": 245,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 220,
											"end": 268,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 246,
											"end": 267,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 220,
											"end": 268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 220,
											"end": 268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 220,
											"end": 268,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 220,
											"end": 268,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 220,
											"end": 268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 220,
											"end": 268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 268,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 220,
											"end": 268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 268,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 220,
											"end": 268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 220,
											"end": 268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 220,
											"end": 268,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 220,
											"end": 268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 220,
											"end": 268,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 220,
											"end": 268,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 220,
											"end": 268,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 220,
											"end": 268,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 220,
											"end": 268,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 220,
											"end": 268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 220,
											"end": 268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 220,
											"end": 268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 220,
											"end": 268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 220,
											"end": 268,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 220,
											"end": 268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 220,
											"end": 268,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 220,
											"end": 268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 220,
											"end": 268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 220,
											"end": 268,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 220,
											"end": 268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 220,
											"end": 268,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 220,
											"end": 268,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 220,
											"end": 268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 268,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 220,
											"end": 268,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 220,
											"end": 268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 220,
											"end": 268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 174,
											"end": 275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 144,
											"end": 275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 482,
											"end": 690,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 482,
											"end": 690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 524,
											"end": 539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 540,
											"end": 550,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 524,
											"end": 550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 524,
											"end": 550,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 560,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 591,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 576,
											"end": 597,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 576,
											"end": 597,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 604,
											"end": 625,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 576,
											"end": 630,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 576,
											"end": 630,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 576,
											"end": 630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 576,
											"end": 630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 576,
											"end": 630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 576,
											"end": 630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 576,
											"end": 630,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 576,
											"end": 630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 576,
											"end": 630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 576,
											"end": 630,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 576,
											"end": 630,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 576,
											"end": 630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 576,
											"end": 630,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 576,
											"end": 630,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 576,
											"end": 630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 576,
											"end": 630,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 576,
											"end": 630,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 576,
											"end": 630,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 576,
											"end": 630,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 576,
											"end": 630,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 576,
											"end": 630,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 576,
											"end": 630,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 576,
											"end": 630,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 576,
											"end": 630,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 576,
											"end": 630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 576,
											"end": 630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 576,
											"end": 630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 576,
											"end": 630,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 576,
											"end": 630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 576,
											"end": 630,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 576,
											"end": 630,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 576,
											"end": 630,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 576,
											"end": 630,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 576,
											"end": 630,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 576,
											"end": 630,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 576,
											"end": 630,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 576,
											"end": 630,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 576,
											"end": 630,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 576,
											"end": 630,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 576,
											"end": 630,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 576,
											"end": 630,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 576,
											"end": 630,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 576,
											"end": 630,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 576,
											"end": 630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 576,
											"end": 630,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 576,
											"end": 630,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 576,
											"end": 630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 576,
											"end": 630,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 576,
											"end": 630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 576,
											"end": 630,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 576,
											"end": 630,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 576,
											"end": 630,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 576,
											"end": 630,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 576,
											"end": 630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 576,
											"end": 630,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 576,
											"end": 630,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 576,
											"end": 630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 576,
											"end": 630,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 576,
											"end": 630,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 576,
											"end": 630,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 576,
											"end": 630,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 576,
											"end": 630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 576,
											"end": 630,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 559,
											"end": 630,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 559,
											"end": 630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 559,
											"end": 630,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 644,
											"end": 651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 639,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 639,
											"end": 684,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 666,
											"end": 674,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 666,
											"end": 674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 666,
											"end": 674,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 639,
											"end": 684,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 639,
											"end": 684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 514,
											"end": 690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 514,
											"end": 690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 482,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 89,
											"end": 138,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 89,
											"end": 138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 89,
											"end": 138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 281,
											"end": 476,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 281,
											"end": 476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 323,
											"end": 338,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 339,
											"end": 349,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 323,
											"end": 349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 323,
											"end": 349,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 358,
											"end": 370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 372,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 372,
											"end": 416,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 394,
											"end": 415,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 372,
											"end": 416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 372,
											"end": 416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 372,
											"end": 416,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 372,
											"end": 416,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 372,
											"end": 416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 372,
											"end": 416,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 372,
											"end": 416,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 372,
											"end": 416,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 372,
											"end": 416,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 372,
											"end": 416,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 372,
											"end": 416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 372,
											"end": 416,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 372,
											"end": 416,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 372,
											"end": 416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 372,
											"end": 416,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 372,
											"end": 416,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 372,
											"end": 416,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 372,
											"end": 416,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 372,
											"end": 416,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 372,
											"end": 416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 372,
											"end": 416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 372,
											"end": 416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 372,
											"end": 416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 358,
											"end": 416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 358,
											"end": 416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 430,
											"end": 437,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 425,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 425,
											"end": 470,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 452,
											"end": 460,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 452,
											"end": 460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 452,
											"end": 460,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 425,
											"end": 470,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 425,
											"end": 470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 313,
											"end": 476,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 313,
											"end": 476,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 281,
											"end": 476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 154,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 7,
											"end": 154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 108,
											"end": 119,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 148,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 130,
											"end": 148,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 130,
											"end": 148,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 154,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 154,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 160,
											"end": 274,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 160,
											"end": 274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 160,
											"end": 274,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 160,
											"end": 274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 280,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 280,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 439,
											"end": 442,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 460,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 541,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 539,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 460,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 460,
											"end": 543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 460,
											"end": 543,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 460,
											"end": 543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 453,
											"end": 543,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 453,
											"end": 543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 552,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 641,
											"end": 644,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 552,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 552,
											"end": 645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 552,
											"end": 645,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 552,
											"end": 645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 670,
											"end": 671,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 668,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 661,
											"end": 672,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 654,
											"end": 672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 280,
											"end": 678,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 280,
											"end": 678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 280,
											"end": 678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 280,
											"end": 678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 684,
											"end": 1063,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 684,
											"end": 1063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 868,
											"end": 871,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 890,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1033,
											"end": 1036,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 890,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 890,
											"end": 1037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 890,
											"end": 1037,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 890,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 883,
											"end": 1037,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 883,
											"end": 1037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1054,
											"end": 1057,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1057,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1057,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 684,
											"end": 1063,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 684,
											"end": 1063,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 684,
											"end": 1063,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 684,
											"end": 1063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/test_work/ETHWallet.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"fund()": "b60d4288",
							"withdraw()": "3ccfd60b",
							"withdrawV2()": "fd4e822e",
							"withdrawV3()": "95dbfc62"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawV2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawV3\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test_work/ETHWallet.sol\":\"ETHWallet\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/test_work/ETHWallet.sol\":{\"keccak256\":\"0xb96bf8aafa3b437719c52372f03780ca5cc3f85db27d81375ef3f15955f5ffd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d52c8499d4092353e6b0a67d19a43411d820312c77bd934da24ceebbdb442ac4\",\"dweb:/ipfs/Qmauy2KZKPuRZ7EPCDpwMnEqxRcmgPJgbPe2fgYkRhvBBE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/test_work/ETHWallet.sol": {
				"ast": {
					"absolutePath": "contracts/test_work/ETHWallet.sol",
					"exportedSymbols": {
						"ETHWallet": [
							89
						]
					},
					"id": 90,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ETHWallet",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "ETHWallet",
							"nameLocation": "67:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 4,
										"nodeType": "Block",
										"src": "122:16:0",
										"statements": []
									},
									"functionSelector": "b60d4288",
									"id": 5,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fund",
									"nameLocation": "98:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "102:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "122:0:0"
									},
									"scope": 89,
									"src": "89:49:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "174:101:0",
										"statements": [
											{
												"assignments": [
													9
												],
												"declarations": [
													{
														"constant": false,
														"id": 9,
														"mutability": "mutable",
														"name": "_sender",
														"nameLocation": "192:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 25,
														"src": "184:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 8,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "184:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 12,
												"initialValue": {
													"expression": {
														"id": 10,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "200:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 11,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "204:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "200:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "184:26:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 20,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "254:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ETHWallet_$89",
																			"typeString": "contract ETHWallet"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_ETHWallet_$89",
																			"typeString": "contract ETHWallet"
																		}
																	],
																	"id": 19,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "246:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 18,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "246:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 21,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "246:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "260:7:0",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "246:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 15,
																	"name": "_sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "228:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 14,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "220:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 13,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "220:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 16,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "220:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 17,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "237:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "220:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "220:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "220:48:0"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 26,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "153:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "161:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "174:0:0"
									},
									"scope": 89,
									"src": "144:131:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 55,
										"nodeType": "Block",
										"src": "313:163:0",
										"statements": [
											{
												"assignments": [
													30
												],
												"declarations": [
													{
														"constant": false,
														"id": 30,
														"mutability": "mutable",
														"name": "_sender",
														"nameLocation": "331:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 55,
														"src": "323:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 29,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "323:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 33,
												"initialValue": {
													"expression": {
														"id": 31,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "339:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "343:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "339:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "323:26:0"
											},
											{
												"assignments": [
													35
												],
												"declarations": [
													{
														"constant": false,
														"id": 35,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "363:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 55,
														"src": "358:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 34,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "358:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 47,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 43,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "402:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ETHWallet_$89",
																			"typeString": "contract ETHWallet"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_ETHWallet_$89",
																			"typeString": "contract ETHWallet"
																		}
																	],
																	"id": 42,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "394:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 41,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "394:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 44,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "394:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 45,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "408:7:0",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "394:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 38,
																	"name": "_sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "380:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "372:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 36,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "372:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "372:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 40,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "389:4:0",
														"memberName": "send",
														"nodeType": "MemberAccess",
														"src": "372:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (uint256) returns (bool)"
														}
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "372:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "358:58:0"
											},
											{
												"condition": {
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "429:8:0",
													"subExpression": {
														"id": 48,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "430:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 54,
												"nodeType": "IfStatement",
												"src": "425:45:0",
												"trueBody": {
													"id": 53,
													"nodeType": "Block",
													"src": "438:32:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 50,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "452:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 51,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "452:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 52,
															"nodeType": "ExpressionStatement",
															"src": "452:8:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "fd4e822e",
									"id": 56,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawV2",
									"nameLocation": "290:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "300:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "313:0:0"
									},
									"scope": 89,
									"src": "281:195:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "514:176:0",
										"statements": [
											{
												"assignments": [
													60
												],
												"declarations": [
													{
														"constant": false,
														"id": 60,
														"mutability": "mutable",
														"name": "_sender",
														"nameLocation": "532:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 87,
														"src": "524:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 59,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "524:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 63,
												"initialValue": {
													"expression": {
														"id": 61,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "540:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "544:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "540:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "524:26:0"
											},
											{
												"assignments": [
													65,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 65,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "565:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 87,
														"src": "560:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 64,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "560:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 79,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "627:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 68,
																		"name": "_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 60,
																		"src": "584:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 67,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "576:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 66,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "576:8:0",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 69,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "576:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "593:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "576:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 73,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "612:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ETHWallet_$89",
																				"typeString": "contract ETHWallet"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_ETHWallet_$89",
																				"typeString": "contract ETHWallet"
																			}
																		],
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "604:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 71,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "604:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 74,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "604:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "618:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "604:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "576:50:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "576:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "559:71:0"
											},
											{
												"condition": {
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "643:8:0",
													"subExpression": {
														"id": 80,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "644:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 86,
												"nodeType": "IfStatement",
												"src": "639:45:0",
												"trueBody": {
													"id": 85,
													"nodeType": "Block",
													"src": "652:32:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 82,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "666:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 83,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "666:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 84,
															"nodeType": "ExpressionStatement",
															"src": "666:8:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "95dbfc62",
									"id": 88,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawV3",
									"nameLocation": "491:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "501:2:0"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:0:0"
									},
									"scope": 89,
									"src": "482:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 90,
							"src": "58:634:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:660:0"
				},
				"id": 0
			}
		}
	}
}